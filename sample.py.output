
############### Sample for labeled trees with POS tags ####################

sexp = ['(', 'S', '(', 'NP', '(', 'DT', 'a', ')', '(', 'NN', 'cat', ')', ')', '(', 'VP', '(', 'VBZ', 'bites', ')', '(', 'NP', '(', 'DT', 'a', ')', '(', 'NN', 'mouse', ')', ')', ')', ')']
tree.__str__() = ( S ( NP ( DT a ) ( NN cat ) ) ( VP ( VBZ bites ) ( NP ( DT a ) ( NN mouse ) ) ) )
tree.tolist() = ['S', ['NP', ['DT', 'a'], ['NN', 'cat']], ['VP', ['VBZ', 'bites'], ['NP', ['DT', 'a'], ['NN', 'mouse']]]]
tree.leaves() = ['a', 'cat', 'bites', 'a', 'mouse']
tree.labelleaves() = ['DT', 'NN', 'VBZ', 'DT', 'NN']
tree.children[0].__str__() = ( NP ( DT a ) ( NN cat ) )
tree.children[1].__str__() = ( VP ( VBZ bites ) ( NP ( DT a ) ( NN mouse ) ) )
tree.children[0].tolist() = ['NP', ['DT', 'a'], ['NN', 'cat']]
tree.children[1].tolist() = ['VP', ['VBZ', 'bites'], ['NP', ['DT', 'a'], ['NN', 'mouse']]]
tree.children[0].leaves() = ['a', 'cat']
tree.children[1].leaves() = ['bites', 'a', 'mouse']
              S                
      ________|____             
     |             VP          
     |         ____|___         
     NP       |        NP      
  ___|___     |     ___|____    
 DT      NN  VBZ   DT       NN 
 |       |    |    |        |   
 a      cat bites  a      mouse

production rules =
	('S', 'NP', 'VP')
	('NP', 'DT', 'NN')
	('DT', 'a')
	('NN', 'cat')
	('VP', 'VBZ', 'NP')
	('VBZ', 'bites')
	('NP', 'DT', 'NN')
	('DT', 'a')
	('NN', 'mouse')
spans =
	('S', 0, 4)
	('NP', 0, 1)
	('VP', 2, 4)
	('NP', 3, 4)
composition spans =
	['S', (0, 1), (2, 4)]
	['NP', (0, 0), (1, 1)]
	['VP', (2, 2), (3, 4)]
	['NP', (3, 3), (4, 4)]
subtrees =
	( S ( NP ( DT a ) ( NN cat ) ) ( VP ( VBZ bites ) ( NP ( DT a ) ( NN mouse ) ) ) )
	( NP ( DT a ) ( NN cat ) )
	( DT a )
	( NN cat )
	( VP ( VBZ bites ) ( NP ( DT a ) ( NN mouse ) ) )
	( VBZ bites )
	( NP ( DT a ) ( NN mouse ) )
	( DT a )
	( NN mouse )
tree2sexp(tree) = ['(', 'S', '(', 'NP', '(', 'DT', 'a', ')', '(', 'NN', 'cat', ')', ')', '(', 'VP', '(', 'VBZ', 'bites', ')', '(', 'NP', '(', 'DT', 'a', ')', '(', 'NN', 'mouse', ')', ')', ')', ')']

############### Sample for labeled trees without POS tags ####################

sexp = ['(', 'S', '(', 'NP', 'a', 'cat', ')', '(', 'VP', 'bites', '(', 'NP', 'a', 'mouse', ')', ')', ')']
tree.__str__() = ( S ( NP a cat ) ( VP bites ( NP a mouse ) ) )
tree.tolist() = ['S', ['NP', 'a', 'cat'], ['VP', 'bites', ['NP', 'a', 'mouse']]]
tree.leaves() = ['a', 'cat', 'bites', 'a', 'mouse']
tree.children[0].__str__() = ( NP a cat )
tree.children[1].__str__() = ( VP bites ( NP a mouse ) )
tree.children[0].tolist() = ['NP', 'a', 'cat']
tree.children[1].tolist() = ['VP', 'bites', ['NP', 'a', 'mouse']]
tree.children[0].leaves() = ['a', 'cat']
tree.children[1].leaves() = ['bites', 'a', 'mouse']
              S                
      ________|____             
     |             VP          
     |         ____|___         
     NP       |        NP      
  ___|___     |     ___|____    
 a      cat bites  a      mouse

production rules =
	('S', 'NP', 'VP')
	('NP', 'a', 'cat')
	('VP', 'bites', 'NP')
	('NP', 'a', 'mouse')
spans =
	('S', 0, 4)
	('NP', 0, 1)
	('VP', 2, 4)
	('NP', 3, 4)
composition spans =
	['S', (0, 1), (2, 4)]
	['NP', (0, 0), (1, 1)]
	['VP', (2, 2), (3, 4)]
	['NP', (3, 3), (4, 4)]
subtrees =
	( S ( NP a cat ) ( VP bites ( NP a mouse ) ) )
	( NP a cat )
	( VP bites ( NP a mouse ) )
	( NP a mouse )
tree2sexp(tree) = ['(', 'S', '(', 'NP', 'a', 'cat', ')', '(', 'VP', 'bites', '(', 'NP', 'a', 'mouse', ')', ')', ')']

############### Sample for unlabeled trees with POS tags ####################

sexp = ['(', '(', '(', 'DT', 'a', ')', '(', 'NN', 'cat', ')', ')', '(', '(', 'VBZ', 'bites', ')', '(', '(', 'DT', 'a', ')', '(', 'NN', 'mouse', ')', ')', ')', ')']
tree.__str__() = ( ( ( DT a ) ( NN cat ) ) ( ( VBZ bites ) ( ( DT a ) ( NN mouse ) ) ) )
tree.tolist() = [[['DT', 'a'], ['NN', 'cat']], [['VBZ', 'bites'], [['DT', 'a'], ['NN', 'mouse']]]]
tree.leaves() = ['a', 'cat', 'bites', 'a', 'mouse']
tree.labelleaves() = ['DT', 'NN', 'VBZ', 'DT', 'NN']
tree.children[0].__str__() = ( ( DT a ) ( NN cat ) )
tree.children[1].__str__() = ( ( VBZ bites ) ( ( DT a ) ( NN mouse ) ) )
tree.children[0].tolist() = [['DT', 'a'], ['NN', 'cat']]
tree.children[1].tolist() = [['VBZ', 'bites'], [['DT', 'a'], ['NN', 'mouse']]]
tree.children[0].leaves() = ['a', 'cat']
tree.children[1].leaves() = ['bites', 'a', 'mouse']
              *                
      ________|____             
     |             *           
     |         ____|___         
     *        |        *       
  ___|___     |     ___|____    
 DT      NN  VBZ   DT       NN 
 |       |    |    |        |   
 a      cat bites  a      mouse

spans =
	(0, 4)
	(0, 1)
	(2, 4)
	(3, 4)
composition spans =
	[(0, 1), (2, 4)]
	[(0, 0), (1, 1)]
	[(2, 2), (3, 4)]
	[(3, 3), (4, 4)]
subtrees =
	( ( ( DT a ) ( NN cat ) ) ( ( VBZ bites ) ( ( DT a ) ( NN mouse ) ) ) )
	( ( DT a ) ( NN cat ) )
	( DT a )
	( NN cat )
	( ( VBZ bites ) ( ( DT a ) ( NN mouse ) ) )
	( VBZ bites )
	( ( DT a ) ( NN mouse ) )
	( DT a )
	( NN mouse )
tree2sexp(tree) = ['(', '(', '(', 'DT', 'a', ')', '(', 'NN', 'cat', ')', ')', '(', '(', 'VBZ', 'bites', ')', '(', '(', 'DT', 'a', ')', '(', 'NN', 'mouse', ')', ')', ')', ')']

############### Sample for unlabeled trees without POS tags ####################

sexp = ['(', '(', 'a', 'cat', ')', '(', 'bites', '(', 'a', 'mouse', ')', ')', ')']
tree.__str__() = ( ( a cat ) ( bites ( a mouse ) ) )
tree.tolist() = [['a', 'cat'], ['bites', ['a', 'mouse']]]
tree.leaves() = ['a', 'cat', 'bites', 'a', 'mouse']
tree.children[0].__str__() = ( a cat )
tree.children[1].__str__() = ( bites ( a mouse ) )
tree.children[0].tolist() = ['a', 'cat']
tree.children[1].tolist() = ['bites', ['a', 'mouse']]
tree.children[0].leaves() = ['a', 'cat']
tree.children[1].leaves() = ['bites', 'a', 'mouse']
              *                
      ________|____             
     |             *           
     |         ____|___         
     *        |        *       
  ___|___     |     ___|____    
 a      cat bites  a      mouse

spans =
	(0, 4)
	(0, 1)
	(2, 4)
	(3, 4)
composition spans =
	[(0, 1), (2, 4)]
	[(0, 0), (1, 1)]
	[(2, 2), (3, 4)]
	[(3, 3), (4, 4)]
subtrees =
	( ( a cat ) ( bites ( a mouse ) ) )
	( a cat )
	( bites ( a mouse ) )
	( a mouse )
tree2sexp(tree) = ['(', '(', 'a', 'cat', ')', '(', 'bites', '(', 'a', 'mouse', ')', ')', ')']

############### Sample for unary or n-ary trees ####################

sexp = ['(', 'NP', '(', 'NP', '(', 'NP', '(', 'N', 'w0', ')', ')', '(', 'NP', '(', 'N', 'w1', ')', ')', ')', '(', 'NP', '(', 'N', 'w2', ')', '(', 'N', 'w3', ')', '(', 'N', 'w4', ')', ')', ')']
tree.__str__() = ( NP ( NP ( NP ( N w0 ) ) ( NP ( N w1 ) ) ) ( NP ( N w2 ) ( N w3 ) ( N w4 ) ) )
tree.tolist() = ['NP', ['NP', ['NP', ['N', 'w0']], ['NP', ['N', 'w1']]], ['NP', ['N', 'w2'], ['N', 'w3'], ['N', 'w4']]]
tree.leaves() = ['w0', 'w1', 'w2', 'w3', 'w4']
tree.children[0].__str__() = ( NP ( NP ( N w0 ) ) ( NP ( N w1 ) ) )
tree.children[1].__str__() = ( NP ( N w2 ) ( N w3 ) ( N w4 ) )
tree.children[0].tolist() = ['NP', ['NP', ['N', 'w0']], ['NP', ['N', 'w1']]]
tree.children[1].tolist() = ['NP', ['N', 'w2'], ['N', 'w3'], ['N', 'w4']]
tree.children[0].leaves() = ['w0', 'w1']
tree.children[1].leaves() = ['w2', 'w3', 'w4']
             NP        
      _______|___       
     NP          |     
  ___|___        |      
 NP      NP      NP    
 |       |    ___|___   
 N       N   N   N   N 
 |       |   |   |   |  
 w0      w1  w2  w3  w4

production rules =
	('NP', 'NP', 'NP')
	('NP', 'NP', 'NP')
	('NP', 'N')
	('N', 'w0')
	('NP', 'N')
	('N', 'w1')
	('NP', 'N', 'N', 'N')
	('N', 'w2')
	('N', 'w3')
	('N', 'w4')
spans =
	('NP', 0, 4)
	('NP', 0, 1)
	('NP', 0, 0)
	('NP', 1, 1)
	('NP', 2, 4)
composition spans =
	['NP', (0, 1), (2, 4)]
	['NP', (0, 0), (1, 1)]
	['NP', (0, 0)]
	['NP', (1, 1)]
	['NP', (2, 2), (3, 3), (4, 4)]
subtrees =
	( NP ( NP ( NP ( N w0 ) ) ( NP ( N w1 ) ) ) ( NP ( N w2 ) ( N w3 ) ( N w4 ) ) )
	( NP ( NP ( N w0 ) ) ( NP ( N w1 ) ) )
	( NP ( N w0 ) )
	( N w0 )
	( NP ( N w1 ) )
	( N w1 )
	( NP ( N w2 ) ( N w3 ) ( N w4 ) )
	( N w2 )
	( N w3 )
	( N w4 )
tree2sexp(tree) = ['(', 'NP', '(', 'NP', '(', 'NP', '(', 'N', 'w0', ')', ')', '(', 'NP', '(', 'N', 'w1', ')', ')', ')', '(', 'NP', '(', 'N', 'w2', ')', '(', 'N', 'w3', ')', '(', 'N', 'w4', ')', ')', ')']

############### Sample for dependency trees ####################

tokens = ['<root>', 'a', 'boy', 'saw', 'a', 'girl', 'with', 'a', 'telescope']
arcs = [(2, 1, 'det'), (3, 2, 'nsubj'), (3, 5, 'dobj'), (5, 4, 'det'), (3, 6, 'prep'), (6, 8, 'pobj'), (8, 7, 'det'), (0, 3, 'root')]
dtree.__str__() = [('2_boy', '1_a', 'det'), ('3_saw', '2_boy', 'nsubj'), ('3_saw', '5_girl', 'dobj'), ('5_girl', '4_a', 'det'), ('3_saw', '6_with', 'prep'), ('6_with', '8_telescope', 'pobj'), ('8_telescope', '7_a', 'det'), ('0_<root>', '3_saw', 'root')]
dtree.tolist(labeled=True) = [(2, 1, 'det'), (3, 2, 'nsubj'), (3, 5, 'dobj'), (5, 4, 'det'), (3, 6, 'prep'), (6, 8, 'pobj'), (8, 7, 'det'), (0, 3, 'root')]
dtree.tolist(labeled=False) = [(2, 1), (3, 2), (3, 5), (5, 4), (3, 6), (6, 8), (8, 7), (0, 3)]
dtree.head2dependents={2: [(1, 'det')], 3: [(2, 'nsubj'), (5, 'dobj'), (6, 'prep')], 5: [(4, 'det')], 6: [(8, 'pobj')], 8: [(7, 'det')], 0: [(3, 'root')]}
dtree.dependent2head={0: (None, None), 1: (2, 'det'), 2: (3, 'nsubj'), 3: (0, 'root'), 4: (5, 'det'), 5: (3, 'dobj'), 6: (3, 'prep'), 7: (8, 'det'), 8: (6, 'pobj')}
dtree.get_dependents(0) = [(3, 'root')]
dtree.get_head(0) = (None, None)
dtree.get_dependents(1) = []
dtree.get_head(1) = (2, 'det')
dtree.get_dependents(2) = [(1, 'det')]
dtree.get_head(2) = (3, 'nsubj')
dtree.get_dependents(3) = [(2, 'nsubj'), (5, 'dobj'), (6, 'prep')]
dtree.get_head(3) = (0, 'root')
dtree.get_dependents(4) = []
dtree.get_head(4) = (5, 'det')
dtree.get_dependents(5) = [(4, 'det')]
dtree.get_head(5) = (3, 'dobj')
dtree.get_dependents(6) = [(8, 'pobj')]
dtree.get_head(6) = (3, 'prep')
dtree.get_dependents(7) = []
dtree.get_head(7) = (8, 'det')
dtree.get_dependents(8) = [(7, 'det')]
dtree.get_head(8) = (6, 'pobj')
                                     _______________________________
                                     |                         prep|
       _____________________________ |___________________          | ____________________
       |                       root| |              dobj|          | |              pobj|
       |       _________ _________ | |       __________ |          | |       __________ |
       |       |det    | |nsubj  | | |       |det     | |          | |       |det     | |
       |       V       | V       | V |       V        | V          V |       V        | V
[ <root> ] [   a   ] [  boy  ] [  saw  ] [   a   ] [  girl  ] [  with  ] [   a   ] [telescope]

############### Sample for conversion of dependency tree -> constituency tree ####################

                                     _______________________________
                                     |                         prep|
       _____________________________ |___________________          | ____________________
       |                       root| |              dobj|          | |              pobj|
       |       _________ _________ | |       __________ |          | |       __________ |
       |       |det    | |nsubj  | | |       |det     | |          | |       |det     | |
       |       V       | V       | V |       V        | V          V |       V        | V
[ <root> ] [   a   ] [  boy  ] [  saw  ] [   a   ] [  girl  ] [  with  ] [   a   ] [telescope]
           <root>                                                    
   __________|_____________                                           
  |                       saw                                        
  |      __________________|__________________                        
  |     |          |           |             with                    
  |     |          |           |          ____|_______                
  |     |         boy         girl       |        telescope          
  |     |     _____|___     ___|____     |     _______|_________      
<root> saw   a        boy  a       girl with  a             telescope


############### Sample for conversion of constituency tree -> dependency tree ####################

                 S                                 
      ___________|_______                           
     |                   VP                        
     |            _______|_________                 
     |           VP                PP              
     |        ___|___          ____|___             
     NP      |       NP       |        NP          
  ___|___    |    ___|___     |     ___|______      
 DT      NN VBD  DT      NN   IN   DT         NN   
 |       |   |   |       |    |    |          |     
 a      boy saw  a      girl with  a      telescope

                          _______________________________
                          |                           VP|
                          |___________________          | ____________________
                          |                VP|          | |                PP|
    _________ _________   |       __________ |          | |       __________ |
    |NP     | |S      |   |       |NP      | |          | |       |NP      | |
    V       | V       |   |       V        | V          V |       V        | V
[   a   ] [  boy  ] [  saw  ] [   a   ] [  girl  ] [  with  ] [   a   ] [telescope]
